<?php
require_once __DIR__ . '/../models/Playlist.php';
require_once __DIR__ . '/../models/Tela.php';

// Recebe o hash da tela
$hash = $_GET['hash'] ?? $_GET['tela'] ?? '';

if (empty($hash)) {
    die('Hash da tela não fornecido');
}

try {
    // Busca a tela pelo hash
    $telaModel = new Tela();
    $tela = $telaModel->getByHash($hash);
    
    if (!$tela) {
        die('Tela não encontrada');
    }
    
    // Busca playlist ativa para esta tela
    $playlistModel = new Playlist();
    $playlist = $playlistModel->getPlaylistAtiva($tela['id']);
    
    $midias = [];
    if ($playlist && $playlist['total_midias'] > 0) {
        $midias = $playlistModel->getMidias($playlist['id']);
    }
    
} catch (Exception $e) {
    error_log("Erro no player: " . $e->getMessage());
    die('Erro interno do servidor');
}
?>
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?= htmlspecialchars($tela['nome']) ?></title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        html, body {
            width: 100%;
            height: 100%;
            background: #000;
            overflow: hidden;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
        }
        
        .player-container {
            width: 100vw;
            height: 100vh;
            position: relative;
            display: grid;
            grid-template-columns: 250px 1fr;
            grid-template-rows: 1fr 40px;
            grid-template-areas: 
                "sidebar content"
                "ticker ticker";
            background: linear-gradient(135deg, #0a0f1c 0%, #1a1f2e 50%, #2a2f3e 100%);
        }
        
        /* Barra lateral esquerda - Azul Royal da empresa */
        .sidebar {
            grid-area: sidebar;
            background: linear-gradient(180deg, 
                #4169e1 0%,
                #1e3a8a 30%,
                #1e40af 70%,
                #1e3a8a 100%);
            position: relative;
            overflow: hidden;
            border-right: 3px solid rgba(65, 105, 225, 0.3);
        }
        
        /* Efeito de textura na sidebar - Azul Royal */
        .sidebar::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: 
                radial-gradient(circle at 20% 30%, rgba(255, 255, 255, 0.08) 0%, transparent 50%),
                radial-gradient(circle at 80% 70%, rgba(255, 255, 255, 0.05) 0%, transparent 50%),
                linear-gradient(45deg, transparent 40%, rgba(255, 255, 255, 0.03) 50%, transparent 60%);
            pointer-events: none;
        }
        
        /* Container do conteúdo da sidebar - Melhor distribuição */
        .sidebar-content {
            position: relative;
            z-index: 2;
            height: 100%;
            display: flex;
            flex-direction: column;
            padding: 30px 20px 20px 20px;
            color: white;
            justify-content: space-between;
        }
        
        /* Logo da empresa - Efeito pulsante destacado */
        .company-logo {
            width: 100%;
            margin-top: 10px;
            max-height: 70px;
            object-fit: contain;
            margin-bottom: 25px;
            filter: brightness(1.2) drop-shadow(0 0 20px rgba(65, 105, 225, 0.6));
            transition: all 0.3s ease;
            animation: logoPulse 3s ease-in-out infinite;
        }
        
        @keyframes logoPulse {
            0%, 100% { 
                transform: scale(1);
                filter: brightness(1.2) drop-shadow(0 0 20px rgba(65, 105, 225, 0.6));
            }
            50% { 
                transform: scale(1.05);
                filter: brightness(1.4) drop-shadow(0 0 30px rgba(65, 105, 225, 0.9));
            }
        }
        
        .company-logo:hover {
            transform: scale(1.08);
            filter: brightness(1.5) drop-shadow(0 0 35px rgba(65, 105, 225, 1));
        }
        
        /* Linha divisória estilosa */
        .divider {
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, 
                transparent 0%, 
                rgba(255, 255, 255, 0.8) 20%, 
                rgba(255, 255, 255, 1) 50%, 
                rgba(255, 255, 255, 0.8) 80%, 
                transparent 100%);
            margin-bottom: 25px;
            margin-top: 10px;
            position: relative;
            border-radius: 1px;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
        }
        
        .divider::before {
            content: '';
            position: absolute;
            top: -2px;
            left: 50%;
            transform: translateX(-50%);
            width: 60%;
            height: 4px;
            background: linear-gradient(90deg, 
                transparent 0%, 
                rgba(255, 255, 255, 0.4) 50%, 
                transparent 100%);
            border-radius: 2px;
            filter: blur(1px);
        }
        
        /* Seção superior - Logo + Divisor + Relógio */
        .top-section {
            flex: 0 0 auto;
        }
        
        /* Data e hora - Sem fundo, apenas texto */
        .datetime-section {
            margin-bottom: 25px;
            margin-top: 30px;
            text-align: center;
        }
        
        .date {
            font-size: 12px;
            font-weight: 600;
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 6px;
            text-transform: uppercase;
            letter-spacing: 0.8px;
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
        }
        
        .time {
            font-size: 32px;
            font-weight: 800;
            color: #ffffff;
            text-shadow: 0 2px 15px rgba(0, 0, 0, 0.6);
            font-variant-numeric: tabular-nums;
        }
        
        /* Seção do meio - Clima */
        .middle-section {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }
        
        /* Seção de clima - Apenas Campinas sem fundo */
        .weather-section {
            margin-bottom: 25px;
            margin-top: 25px;
        }
        
        .weather-location {
            font-size: 15px;
            font-weight: 1100;
            color: rgba(255, 255, 255, 0.9);
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            text-align: center;
        }
        
        .weather-main {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 12px;
        }
        
        .weather-icon {
            font-size: 55px;
            margin-right: 12px;
            filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.3));
        }
        
        .weather-temp {
            font-size: 60px;
            font-weight: 800;
            color: #ffffff;
            text-shadow: 0 2px 15px rgba(0, 0, 0, 0.4);
        }
        
        .weather-desc {
            font-size: 12px;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
            text-align: center;
            margin-bottom: 20px;
        }
        
        /* Previsão semanal */
        .weekly-forecast {
            margin-bottom: 20px;
        }
        
        .forecast-title {
            font-size: 11px;
            font-weight: 600;
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            text-align: center;
        }
        
        .forecast-days {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 6px;
        }
        
        .forecast-day {
            background: linear-gradient(145deg, 
                rgba(255, 255, 255, 0.08) 0%,
                rgba(255, 255, 255, 0.03) 100%);
            border-radius: 6px;
            padding: 9px 6px;
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .forecast-day-name {
            font-size: 12px;
            font-weight: 600;
            color: rgba(255, 255, 255, 0.7);
            margin-bottom: 3px;
            text-transform: uppercase;
        }
        
        .forecast-day-icon {
            font-size: 16px;
            margin-bottom: 3px;
        }
        
        .forecast-day-temp {
            font-size: 10px;
            font-weight: 700;
            color: #ffffff;
        }
        
        /* Seção inferior - Informações adicionais */
        .bottom-section {
            flex: 0 0 auto;
        }
        
        .info-section {
            display: flex;
            flex-direction: column;
        }
        
        .info-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 6px 0;
            border-bottom: 1px solid rgba(65, 105, 225, 0.2);
            font-size: 11px;
            color: rgba(255, 255, 255, 0.8);
        }
        
        .info-item:last-child {
            border-bottom: none;
        }
        
        .info-label {
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .info-value {
            font-weight: 600;
            color: #ffffff;
        }
        
        /* Área principal do vídeo */
        .media-content {
            grid-area: content;
            position: relative;
            background: #000;
            overflow: hidden;
            margin: 0;
            border-radius: 0;
            box-shadow: 
                0 20px 40px rgba(0, 0, 0, 0.4),
                inset 0 1px 0 rgba(255, 255, 255, 0.1);
        }
        
        .media-content video,
        .media-content img,
        .media-content iframe {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border: none;
            display: block;
        }
        
        /* Estilo específico para sites - iframe responsivo */
        .media-content iframe.site-frame {
            width: 100%;
            height: 100%;
            border: none;
            display: block;
            background: #fff;
            object-fit: fill; /* Para sites, usar fill ao invés de cover */
        }
        
        /* Indicador de carregamento para sites */
        .site-loading {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.9);
            color: white;
            padding: 25px 35px;
            border-radius: 15px;
            font-size: 18px;
            z-index: 10;
            backdrop-filter: blur(15px);
            border: 2px solid rgba(255, 255, 255, 0.2);
            text-align: center;
        }
        
        .site-loading .spinner {
            display: inline-block;
            width: 24px;
            height: 24px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: #4169e1;
            animation: spin 1s ease-in-out infinite;
            margin-right: 12px;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        /* Ticker de notícias - Nova cor azul escuro/marinho */
        .news-ticker {
            grid-area: ticker;
            background: linear-gradient(135deg, 
                #1e3a8a 0%,
                #1e40af 50%,
                #1d4ed8 100%);
            position: relative;
            overflow: hidden;
            border-top: 2px solid rgba(30, 58, 138, 0.4);
            height: 40px;
        }
        
        .news-ticker::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: 
                linear-gradient(45deg, transparent 40%, rgba(255, 255, 255, 0.03) 50%, transparent 60%),
                radial-gradient(circle at 30% 40%, rgba(255, 255, 255, 0.05) 0%, transparent 50%);
            pointer-events: none;
        }
        
        .ticker-container {
            position: relative;
            z-index: 2;
            height: 100%;
            display: flex;
            align-items: center;
            padding: 0 25px;
        }
        
        .ticker-header {
            display: flex;
            align-items: center;
            margin-right: 30px;
            min-width: 120px;
        }
        
        .ticker-icon {
            width: 30px;
            height: 30px;
            background: linear-gradient(145deg, 
                rgba(255, 255, 255, 0.2) 0%,
                rgba(255, 255, 255, 0.1) 100%);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 10px;
            font-size: 14px;
            border: 1px solid rgba(255, 255, 255, 0.15);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }
        
        .ticker-title {
            color: white;
            font-size: 12px;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.8px;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }
        
        .ticker-content {
            flex: 1;
            height: 100%;
            display: flex;
            align-items: center;
            overflow: hidden;
            position: relative;
        }
        
        .ticker-text {
            white-space: nowrap;
            animation: scroll-left 50s linear infinite;
            font-size: 20px;
            font-weight: 500;
            color: rgba(255, 255, 255, 0.95);
            padding-left: 100%;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }
        
        @keyframes scroll-left {
            0% { transform: translateX(0); }
            100% { transform: translateX(-100%); }
        }
        
        /* Tela de sem conteúdo */
        .no-content {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, 
                #4169e1 0%, 
                #1e3a8a 25%, 
                #1e40af 50%, 
                #1e3a8a 75%, 
                #4169e1 100%);
            background-size: 400% 400%;
            animation: gradientShift 20s ease-in-out infinite;
            color: #fff;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .no-content::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, 
                rgba(255, 255, 255, 0.08) 0%, 
                transparent 70%);
            animation: rotate 30s linear infinite;
            pointer-events: none;
        }
        
        @keyframes gradientShift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }
        
        @keyframes rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .screen-icon {
            width: 160px;
            height: 100px;
            border: 4px solid rgba(255, 255, 255, 0.8);
            border-radius: 16px;
            position: relative;
            margin-bottom: 40px;
            background: linear-gradient(145deg, 
                rgba(255, 255, 255, 0.15), 
                rgba(255, 255, 255, 0.05));
            backdrop-filter: blur(20px);
            animation: float 4s ease-in-out infinite;
            z-index: 2;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-15px); }
        }
        
        .screen-icon::after {
            content: '';
            position: absolute;
            bottom: -30px;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 25px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 0 0 16px 16px;
        }
        
        .screen-icon::before {
            content: '';
            position: absolute;
            bottom: 20px;
            right: 20px;
            width: 12px;
            height: 12px;
            background: #00ff88;
            border-radius: 50%;
            animation: pulse 2s ease-in-out infinite;
            box-shadow: 0 0 15px #00ff88;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; transform: scale(1); }
            50% { opacity: 0.6; transform: scale(1.3); }
        }
        
        .logo {
            font-size: 80px;
            font-weight: 900;
            color: #ffffff;
            margin-bottom: 20px;
            letter-spacing: 3px;
            position: relative;
            z-index: 2;
            text-transform: uppercase;
            background: linear-gradient(135deg, 
                #ffffff 0%, 
                #e8f4fd 50%, 
                #ffffff 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            filter: drop-shadow(0 4px 20px rgba(0, 0, 0, 0.3));
        }
        
        .waiting-message {
            font-size: 22px;
            color: rgba(255, 255, 255, 0.9);
            position: relative;
            z-index: 2;
            margin-bottom: 10px;
            font-weight: 500;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }
        
        .subtitle {
            font-size: 16px;
            color: rgba(255, 255, 255, 0.7);
            position: relative;
            z-index: 2;
            font-weight: 400;
            text-shadow: 0 1px 5px rgba(0, 0, 0, 0.3);
        }
        
        /* Botão de tela cheia - Azul Royal - Desaparece em fullscreen */
        .fullscreen-btn {
            position: fixed;
            top: 40px;
            right: 40px;
            width: 80px;
            height: 80px;
            background: linear-gradient(145deg, 
                rgba(65, 105, 225, 0.2) 0%,
                rgba(30, 58, 138, 0.1) 100%);
            backdrop-filter: blur(20px);
            border: 2px solid rgba(65, 105, 225, 0.3);
            border-radius: 20px;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 32px;
            z-index: 9999;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            opacity: 0.9;
        }
        
        .fullscreen-btn:hover {
            background: linear-gradient(145deg, 
                rgba(65, 105, 225, 0.35) 0%,
                rgba(30, 58, 138, 0.25) 100%);
            border-color: rgba(65, 105, 225, 0.5);
            opacity: 1;
            transform: scale(1.05) translateY(-2px);
            box-shadow: 0 15px 35px rgba(65, 105, 225, 0.3);
        }
        
        .fullscreen-btn:active {
            transform: scale(1.02) translateY(0px);
        }
        
        /* Esconde o botão em tela cheia */
        .fullscreen-btn.hidden {
            opacity: 0;
            pointer-events: none;
            transform: scale(0.8) translateY(-10px);
        }
        
        /* Indicador de som */
        .sound-indicator {
            position: fixed;
            bottom: 60px;
            left: 40px;
            background: linear-gradient(145deg, 
                rgba(0, 0, 0, 0.8) 0%,
                rgba(0, 0, 0, 0.6) 100%);
            backdrop-filter: blur(20px);
            color: white;
            padding: 15px 20px;
            border-radius: 12px;
            font-size: 14px;
            z-index: 9999;
            opacity: 0;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid rgba(255, 255, 255, 0.1);
            font-weight: 500;
        }
        
        .sound-indicator.show {
            opacity: 1;
            transform: translateY(0);
        }
        
        .sound-indicator.muted {
            background: linear-gradient(145deg, 
                rgba(239, 68, 68, 0.9) 0%,
                rgba(220, 38, 38, 0.8) 100%);
            border-color: rgba(239, 68, 68, 0.3);
        }
        
        .sound-indicator.unmuted {
            background: linear-gradient(145deg, 
                rgba(34, 197, 94, 0.9) 0%,
                rgba(22, 163, 74, 0.8) 100%);
            border-color: rgba(34, 197, 94, 0.3);
        }
        
        /* Estados de carregamento */
        .loading {
            opacity: 0.7;
        }
        
        .loading::after {
            content: '...';
            animation: dots 1.5s infinite;
        }
        
        @keyframes dots {
            0%, 20% { content: ''; }
            40% { content: '.'; }
            60% { content: '..'; }
            80%, 100% { content: '...'; }
        }
        
        /* Remove cursor após inatividade */
        .no-cursor {
            cursor: none;
        }
        
        .hidden {
            display: none !important;
        }
    </style>
</head>
<body>
    <div class="player-container">
        <!-- Barra lateral esquerda -->
        <div class="sidebar">
            <div class="sidebar-content">
                <!-- Seção superior -->
                <div class="top-section">
                    <!-- Logo da empresa -->
                    <img src="https://www.ctdi.com/wp-content/uploads/2020/12/ctdi-flat-logo-white-1024x223.png" 
                         alt="CTDI Logo" class="company-logo" id="companyLogo">
                    
                    <!-- Linha divisória estilosa -->
                    <div class="divider"></div>
                    
                    <!-- Data e hora - Sem fundo, com segundos -->
                    <div class="datetime-section">
                        <div class="date" id="currentDate">Carregando...</div>
                        <div class="time" id="currentTime">--:--:--</div>
                    </div>
                    <!-- Nova linha divisória -->
                    <div class="divider"></div>
                </div>
                
                <!-- Seção do meio -->
                <div class="middle-section">
                    <!-- Seção de clima - Apenas Campinas sem fundo -->
                    <div class="weather-section">
                        <div class="weather-location" id="weatherLocation">Campinas, SP</div>
                        <div class="weather-main">
                            <div class="weather-icon" id="weatherIcon">☁️</div>
                            <div class="weather-temp" id="weatherTemp">--°</div>
                        </div>
                        <div class="weather-desc" id="weatherDesc">Carregando...</div>
                        
                        <!-- Previsão semanal -->
                        <div class="weekly-forecast">
                            <div class="forecast-title">Próximos Dias</div>
                            <div class="forecast-days" id="weeklyForecast">
                                <div class="forecast-day">
                                    <div class="forecast-day-name">SEG</div>
                                    <div class="forecast-day-icon">🌤️</div>
                                    <div class="forecast-day-temp">25°</div>
                                </div>
                                <div class="forecast-day">
                                    <div class="forecast-day-name">TER</div>
                                    <div class="forecast-day-icon">☁️</div>
                                    <div class="forecast-day-temp">23°</div>
                                </div>
                                <div class="forecast-day">
                                    <div class="forecast-day-name">QUA</div>
                                    <div class="forecast-day-icon">🌧️</div>
                                    <div class="forecast-day-temp">21°</div>
                                </div>
                                <div class="forecast-day">
                                    <div class="forecast-day-name">QUI</div>
                                    <div class="forecast-day-icon">⛅</div>
                                    <div class="forecast-day-temp">24°</div>
                                </div>
                                <div class="forecast-day">
                                    <div class="forecast-day-name">SEX</div>
                                    <div class="forecast-day-icon">☀️</div>
                                    <div class="forecast-day-temp">27°</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Nova linha divisória -->
                    <div class="divider"></div>
                </div>
                
                <!-- Seção inferior -->
                <div class="bottom-section">
                    <!-- Informações adicionais -->
                    <div class="info-section">
                        <div class="info-item">
                            <span class="info-label">Umidade</span>
                            <span class="info-value" id="humidity">--%</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Vento</span>
                            <span class="info-value" id="windSpeed">-- km/h</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Sensação</span>
                            <span class="info-value" id="feelsLike">--°C</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Player de mídia -->
        <div class="media-content" id="mediaContainer">
            <?php if (empty($midias)): ?>
                <div class="no-content">
                    <div class="screen-icon"></div>
                    <div class="logo">CTDI</div>
                    <div class="waiting-message">Aguardando conteúdo...</div>
                    <div class="subtitle">Nenhuma mídia configurada para esta tela</div>
                </div>
            <?php endif; ?>
        </div>
        
        <!-- Ticker de notícias - Nova cor azul escuro/marinho -->
        <div class="news-ticker">
            <div class="ticker-container">
                <div class="ticker-header">
                    <div class="ticker-icon">📰</div>
                    <div>
                        <div class="ticker-title">Últimas Notícias</div>
                    </div>
                </div>
                <div class="ticker-content">
                    <div class="ticker-text" id="tickerText">Carregando notícias...</div>
                </div>
            </div>
        </div>
        
        <!-- Botão de tela cheia -->
        <button class="fullscreen-btn" id="fullscreenBtn" title="Tela cheia + Som">
            ⛶
        </button>
        
        <!-- Indicador de som -->
        <div class="sound-indicator" id="soundIndicator">
            🔇 Clique no botão de tela cheia para ativar som
        </div>
    </div>

    <script>
        // Dados das mídias
        const midias = <?= json_encode($midias) ?>;
        let currentIndex = 0;
        let currentTimer = null;
        let cursorTimer = null;
        let currentVideoElement = null;
        let soundEnabled = false;
        
        // Elementos DOM
        const mediaContainer = document.getElementById('mediaContainer');
        const fullscreenBtn = document.getElementById('fullscreenBtn');
        const soundIndicator = document.getElementById('soundIndicator');
        
        // Configurações das APIs
        const WEATHER_API_KEY = '1fa2a0de047abd58cbed9975bbf0e963';
        const WEATHER_CITY = 'Campinas';
        const NEWS_API_KEY = 'YOUR_NEWS_API_KEY'; // Substitua pela sua chave da NewsAPI
        
        console.log('Player carregado com', midias.length, 'mídias');
        
        // Inicializa componentes
        initDateTime();
        initWeather();
        initNews();
        initFullscreenDetection();
        
        // Mostra indicador de som inicialmente
        setTimeout(() => {
            soundIndicator.classList.add('show', 'muted');
        }, 2000);
        
        // Esconde indicador após 5 segundos
        setTimeout(() => {
            soundIndicator.classList.remove('show');
        }, 7000);
        
        // NOVA FUNÇÃO: Detectar se URL é de site ou imagem
        function isWebsiteUrl(url) {
            if (!url) return false;
            
            // Extensões de imagem comuns
            const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.svg', '.ico'];
            
            // Verifica se a URL termina com extensão de imagem
            const hasImageExtension = imageExtensions.some(ext => 
                url.toLowerCase().includes(ext)
            );
            
            // Se tem extensão de imagem, é imagem
            if (hasImageExtension) {
                return false;
            }
            
            // Domínios que são claramente sites (não imagens)
            const websiteDomains = [
                'google.com', 'youtube.com', 'facebook.com', 'instagram.com',
                'twitter.com', 'linkedin.com', 'github.com', 'stackoverflow.com',
                'wikipedia.org', 'reddit.com', 'amazon.com', 'microsoft.com',
                'apple.com', 'netflix.com', 'spotify.com'
            ];
            
            // Verifica se contém domínio conhecido de site
            const isKnownWebsite = websiteDomains.some(domain => 
                url.toLowerCase().includes(domain)
            );
            
            if (isKnownWebsite) {
                return true;
            }
            
            // Se a URL não tem extensão específica e parece ser uma página
            // (contém apenas domínio ou termina com / ou contém parâmetros)
            const urlPattern = /^https?:\/\/[^\/]+\/?(\?.*)?$/;
            if (urlPattern.test(url)) {
                return true;
            }
            
            // Se contém palavras típicas de sites
            const websiteKeywords = ['/home', '/index', '/page', '/site', '/portal', '/dashboard'];
            const hasWebsiteKeywords = websiteKeywords.some(keyword => 
                url.toLowerCase().includes(keyword)
            );
            
            return hasWebsiteKeywords;
        }
        
        // Função para detectar mudanças de tela cheia
        function initFullscreenDetection() {
            function handleFullscreenChange() {
                if (document.fullscreenElement) {
                    // Entrou em tela cheia - esconde o botão
                    fullscreenBtn.classList.add('hidden');
                } else {
                    // Saiu de tela cheia - mostra o botão
                    fullscreenBtn.classList.remove('hidden');
                }
            }
            
            document.addEventListener('fullscreenchange', handleFullscreenChange);
            document.addEventListener('webkitfullscreenchange', handleFullscreenChange);
            document.addEventListener('mozfullscreenchange', handleFullscreenChange);
            document.addEventListener('MSFullscreenChange', handleFullscreenChange);
        }
        
        // Função para atualizar data e hora com segundos
        function initDateTime() {
            function updateDateTime() {
                const now = new Date();
                
                const dateOptions = { 
                    weekday: 'long', 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric' 
                };
                
                const timeOptions = { 
                    hour: '2-digit', 
                    minute: '2-digit',
                    second: '2-digit',
                    hour12: false
                };
                
                document.getElementById('currentDate').textContent = 
                    now.toLocaleDateString('pt-BR', dateOptions);
                document.getElementById('currentTime').textContent = 
                    now.toLocaleTimeString('pt-BR', timeOptions);
            }
            
            updateDateTime();
            setInterval(updateDateTime, 1000);
        }
        
        // Função para buscar dados do clima de Campinas
        function initWeather() {
            async function fetchWeather() {
                try {
                    const response = await fetch(
                        `https://api.openweathermap.org/data/2.5/weather?q=${WEATHER_CITY}&appid=${WEATHER_API_KEY}&units=metric&lang=pt_br`
                    );
                    
                    if (!response.ok) {
                        throw new Error('Erro na API do clima');
                    }
                    
                    const data = await response.json();
                    
                    // Mapeia ícones do clima
                    const weatherIcons = {
                        '01d': '☀️', '01n': '🌙',
                        '02d': '⛅', '02n': '☁️',
                        '03d': '☁️', '03n': '☁️',
                        '04d': '☁️', '04n': '☁️',
                        '09d': '🌧️', '09n': '🌧️',
                        '10d': '🌦️', '10n': '🌧️',
                        '11d': '⛈️', '11n': '⛈️',
                        '13d': '❄️', '13n': '❄️',
                        '50d': '🌫️', '50n': '🌫️'
                    };
                    
                    document.getElementById('weatherIcon').textContent = 
                        weatherIcons[data.weather[0].icon] || '☁️';
                    document.getElementById('weatherTemp').textContent = 
                        Math.round(data.main.temp) + '°';
                    document.getElementById('weatherDesc').textContent = 
                        data.weather[0].description.charAt(0).toUpperCase() + 
                        data.weather[0].description.slice(1);
                    document.getElementById('humidity').textContent = 
                        data.main.humidity + '%';
                    document.getElementById('windSpeed').textContent = 
                        Math.round(data.wind.speed * 3.6) + ' km/h';
                    document.getElementById('feelsLike').textContent = 
                        Math.round(data.main.feels_like) + '°C';
                        
                } catch (error) {
                    console.error('Erro ao buscar clima:', error);
                    document.getElementById('weatherTemp').textContent = '--°';
                    document.getElementById('weatherDesc').textContent = 'Indisponível';
                    document.getElementById('humidity').textContent = '--%';
                    document.getElementById('windSpeed').textContent = '-- km/h';
                    document.getElementById('feelsLike').textContent = '--°C';
                }
            }
            
            fetchWeather();
            setInterval(fetchWeather, 10 * 60 * 1000);
        }
        
        // Função para buscar notícias da NewsAPI
        function initNews() {
            let newsData = [];
            let newsIndex = 0;
            
            // Categorias de notícias para diversificar o conteúdo
            const newsCategories = [
                { category: 'general', country: 'br' },
                { category: 'sports', country: 'br' },
                { category: 'health', country: 'br' },
                { category: 'technology', country: 'br' },
                { category: 'business', country: 'br' }
            ];
            
            async function fetchNews() {
                try {
                    console.log('🔍 Buscando notícias da NewsAPI...');
                    
                    // Busca notícias de diferentes categorias
                    const newsPromises = newsCategories.map(async ({ category, country }) => {
                        try {
                            const response = await fetch(
                                `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&pageSize=10&apiKey=${NEWS_API_KEY}`
                            );
                            
                            if (!response.ok) {
                                throw new Error(`Erro na API de notícias: ${response.status}`);
                            }
                            
                            const data = await response.json();
                            return data.articles || [];
                        } catch (error) {
                            console.error(`Erro ao buscar notícias da categoria ${category}:`, error);
                            return [];
                        }
                    });
                    
                    const allNewsArrays = await Promise.all(newsPromises);
                    const allNews = allNewsArrays.flat();
                    
                    if (allNews.length > 0) {
                        // Filtra notícias válidas e formata
                        newsData = allNews
                            .filter(article => article.title && article.title !== '[Removed]')
                            .map(article => article.title)
                            .slice(0, 30); // Limita a 30 notícias
                        
                        console.log(`✅ ${newsData.length} notícias carregadas da NewsAPI`);
                    } else {
                        throw new Error('Nenhuma notícia encontrada');
                    }
                    
                } catch (error) {
                    console.error('❌ Erro ao buscar notícias da API:', error);
                    
                    // Fallback para notícias de exemplo diversificadas
                    newsData = [
                        // Notícias gerais
                        "Governo federal anuncia pacote de investimentos bilionários em infraestrutura digital e conectividade",
                        "Mercado financeiro registra alta de 2,5% nesta segunda-feira com otimismo dos investidores internacionais",
                        "Expansão do BRICS: bloco anuncia 6 novos membros em decisão histórica para economia global",
                        
                        // Tecnologia
                        "Novas tecnologias de inteligência artificial prometem revolucionar o setor de telecomunicações brasileiro",
                        "Empresas brasileiras lideram ranking mundial de inovação em soluções cloud computing e big data",
                        "Setor de tecnologia da informação cresce 15% no primeiro trimestre superando todas as expectativas",
                        "Rede 5G chega a mais 50 cidades brasileiras expandindo conectividade e transformação digital",
                        
                        // Cibersegurança
                        "Cibersegurança: empresas investem R$ 12 bilhões em proteção de dados corporativos e compliance",
                        "Nova lei de proteção de dados entra em vigor fortalecendo direitos digitais dos consumidores",
                        "Ataques cibernéticos diminuem 30% após implementação de novas medidas de segurança nacional",
                        
                        // Esportes
                        "Seleção brasileira de futebol confirma convocação para próximos jogos das eliminatórias",
                        "Campeonato brasileiro de futebol entra na reta final com disputa acirrada pelo título",
                        "Atletas brasileiros conquistam medalhas em competição internacional de natação",
                        "Copa do Mundo de vôlei: Brasil avança para as semifinais após vitória convincente",
                        "Fórmula 1: piloto brasileiro conquista pódio em corrida emocionante no circuito europeu",
                        
                        // Saúde
                        "Ministério da Saúde anuncia nova campanha nacional de vacinação contra gripe sazonal",
                        "Pesquisa brasileira desenvolve tratamento inovador para doenças cardiovasculares",
                        "Sistema Único de Saúde amplia atendimento especializado em 200 municípios do interior",
                        "Descoberta científica brasileira pode revolucionar tratamento de diabetes tipo 2",
                        "Telemedicina cresce 400% e transforma acesso à saúde em regiões remotas do país",
                        
                        // Segurança
                        "Operação policial desmantela esquema de crimes cibernéticos em cinco estados brasileiros",
                        "Índices de criminalidade registram queda de 15% nas principais capitais do país",
                        "Forças de segurança intensificam patrulhamento em rodovias federais durante feriado prolongado",
                        "Sistema de videomonitoramento inteligente reduz crimes em 40% nas áreas urbanas",
                        "Polícia Federal deflagra operação contra organização criminosa internacional",
                        
                        // Economia e negócios
                        "Startups brasileiras recebem investimento recorde de R$ 8 bilhões no primeiro semestre",
                        "Setor de agronegócios bate novo recorde de exportações impulsionando economia nacional",
                        "Programa de microcrédito beneficia mais de 500 mil pequenos empreendedores em todo o país",
                        "Bolsa de valores fecha semana em alta com valorização de empresas de tecnologia",
                        "Inflação registra menor índice dos últimos 12 meses sinalizando estabilidade econômica"
                    ];
                    
                    console.log(`📰 Usando ${newsData.length} notícias de exemplo`);
                }
            }
            
            function updateNews() {
                const tickerText = document.getElementById('tickerText');
                
                if (newsData.length === 0) {
                    tickerText.textContent = 'Carregando notícias...';
                    return;
                }
                
                // Seleciona 4 notícias sequenciais para exibir
                let newsString = '';
                for (let i = 0; i < 4; i++) {
                    const index = (newsIndex + i) % newsData.length;
                    newsString += newsData[index] + ' • ';
                }
                
                tickerText.textContent = newsString;
                newsIndex = (newsIndex + 1) % newsData.length;
            }
            
            // Busca notícias inicialmente
            fetchNews().then(() => {
                updateNews();
                // Atualiza o ticker a cada 45 segundos
                setInterval(updateNews, 45000);
            });
            
            // Busca novas notícias a cada 30 minutos
            setInterval(fetchNews, 30 * 60 * 1000);
        }
        
        // Função para mostrar indicador de som
        function showSoundIndicator(muted) {
            soundIndicator.classList.remove('muted', 'unmuted');
            if (muted) {
                soundIndicator.innerHTML = '🔇 Som desativado - Clique no botão de tela cheia';
                soundIndicator.classList.add('muted');
            } else {
                soundIndicator.innerHTML = '🔊 Som ativado';
                soundIndicator.classList.add('unmuted');
            }
            soundIndicator.classList.add('show');
            
            setTimeout(() => {
                soundIndicator.classList.remove('show');
            }, 3000);
        }
        
        // Função para ativar tela cheia e som
        function activateFullscreenAndSound() {
            console.log('🚀 Ativando tela cheia e som...');
            
            soundEnabled = true;
            
            document.documentElement.requestFullscreen().then(() => {
                console.log('✅ Tela cheia ativada');
                
                if (currentVideoElement) {
                    currentVideoElement.muted = false;
                    showSoundIndicator(false);
                }
                
            }).catch(e => {
                console.log('⚠️ Não foi possível entrar em tela cheia:', e);
                
                if (currentVideoElement) {
                    currentVideoElement.muted = false;
                    showSoundIndicator(false);
                }
            });
        }
        
        // Event listener para o botão de tela cheia
        fullscreenBtn.addEventListener('click', activateFullscreenAndSound);
        
        // Função para mostrar mídia
        function showMedia(index) {
            if (index >= midias.length) index = 0;
            if (index < 0) index = midias.length - 1;
            
            currentIndex = index;
            const midia = midias[index];
            
            console.log(`▶️ Reproduzindo mídia ${index + 1}/${midias.length}:`, midia.nome, 'Tipo:', midia.tipo);
            
            // Limpa container anterior
            mediaContainer.innerHTML = '';
            clearTimeout(currentTimer);
            currentVideoElement = null;
            
            let mediaElement = null;
            let duration = parseInt(midia.tempo_exibicao) * 1000;
            
            if (midia.tipo === 'video') {
                mediaElement = document.createElement('video');
                mediaElement.src = midia.caminho;
                mediaElement.autoplay = true;
                mediaElement.muted = !soundEnabled;
                mediaElement.loop = false;
                mediaElement.controls = false;
                mediaElement.preload = 'auto';
                mediaElement.playsInline = true;
                currentVideoElement = mediaElement;
                
                mediaElement.addEventListener('loadeddata', () => {
                    console.log('📹 Vídeo carregado:', midia.nome);
                });
                
                mediaElement.addEventListener('ended', () => {
                    console.log('⏭️ Vídeo terminou, próxima mídia');
                    nextMedia();
                });
                
                mediaElement.addEventListener('error', (e) => {
                    console.error('❌ Erro no vídeo:', e);
                    setTimeout(() => nextMedia(), 2000);
                });
                
                currentTimer = setTimeout(() => {
                    console.log('⏰ Timer de segurança ativado');
                    nextMedia();
                }, duration);
                
            } else if (midia.tipo === 'youtube') {
                const videoId = extractYouTubeId(midia.caminho);
                if (videoId) {
                    mediaElement = document.createElement('iframe');
                    const muteParam = soundEnabled ? '0' : '1';
                    mediaElement.src = `https://www.youtube.com/embed/${videoId}?autoplay=1&mute=${muteParam}&controls=0&showinfo=0&rel=0&modestbranding=1&iv_load_policy=3&fs=0&disablekb=1&loop=1&playlist=${videoId}`;
                    mediaElement.allow = 'autoplay; encrypted-media';
                    mediaElement.frameBorder = '0';
                    
                    currentTimer = setTimeout(() => {
                        console.log('⏰ Timer YouTube ativado');
                        nextMedia();
                    }, duration);
                } else {
                    console.error('❌ ID do YouTube inválido:', midia.caminho);
                    setTimeout(() => nextMedia(), 2000);
                    return;
                }
                
            } else if (midia.tipo === 'imagem' || midia.tipo === 'link_imagem') {
                // CORREÇÃO PRINCIPAL: Detectar automaticamente se é site ou imagem
                const mediaUrl = midia.url_externa || midia.caminho;
                
                if (isWebsiteUrl(mediaUrl)) {
                    // É um SITE - usar iframe
                    console.log('🌐 URL detectada como SITE:', mediaUrl);
                    
                    // Criar indicador de carregamento
                    const loadingDiv = document.createElement('div');
                    loadingDiv.className = 'site-loading';
                    loadingDiv.innerHTML = '<div class="spinner"></div>Carregando site...';
                    mediaContainer.appendChild(loadingDiv);
                    
                    // Criar iframe para o site
                    mediaElement = document.createElement('iframe');
                    mediaElement.className = 'site-frame';
                    mediaElement.src = mediaUrl;
                    mediaElement.allow = 'autoplay; encrypted-media; fullscreen';
                    mediaElement.frameBorder = '0';
                    mediaElement.title = midia.nome;
                    
                    // Event listeners para o iframe
                    mediaElement.addEventListener('load', () => {
                        console.log('✅ Site carregado com sucesso:', midia.nome);
                        // Remove indicador de carregamento
                        const loading = mediaContainer.querySelector('.site-loading');
                        if (loading) loading.remove();
                    });
                    
                    mediaElement.addEventListener('error', (e) => {
                        console.error('❌ Erro ao carregar site:', midia.nome, e);
                        // Remove indicador de carregamento e mostra próxima mídia
                        const loading = mediaContainer.querySelector('.site-loading');
                        if (loading) loading.remove();
                        setTimeout(nextMedia, 2000);
                    });
                    
                    // Timer para próxima mídia
                    currentTimer = setTimeout(() => {
                        console.log('⏰ Timer do site ativado, próxima mídia');
                        nextMedia();
                    }, duration);
                    
                    // Remove indicador de carregamento após 5 segundos (fallback)
                    setTimeout(() => {
                        const loading = mediaContainer.querySelector('.site-loading');
                        if (loading) loading.remove();
                    }, 5000);
                    
                } else {
                    // É uma IMAGEM - usar img
                    console.log('🖼️ URL detectada como IMAGEM:', mediaUrl);
                    
                    mediaElement = document.createElement('img');
                    mediaElement.src = mediaUrl;
                    mediaElement.alt = midia.nome;
                    
                    mediaElement.addEventListener('load', () => {
                        console.log('🖼️ Imagem carregada:', midia.nome);
                    });
                    
                    mediaElement.addEventListener('error', (e) => {
                        console.error('❌ Erro na imagem:', e);
                        setTimeout(() => nextMedia(), 2000);
                    });
                    
                    currentTimer = setTimeout(() => {
                        console.log('⏰ Timer imagem ativado');
                        nextMedia();
                    }, duration);
                }
                
            } else if (midia.tipo === 'site') {
                // FUNCIONALIDADE EXPLÍCITA: Tipo site
                console.log('🌐 Carregando site (tipo explícito):', midia.nome, 'URL:', midia.url_externa || midia.caminho);
                
                // Criar indicador de carregamento
                const loadingDiv = document.createElement('div');
                loadingDiv.className = 'site-loading';
                loadingDiv.innerHTML = '<div class="spinner"></div>Carregando site...';
                mediaContainer.appendChild(loadingDiv);
                
                // Criar iframe para o site
                mediaElement = document.createElement('iframe');
                mediaElement.className = 'site-frame';
                
                // Usar url_externa se disponível, senão usar caminho
                const siteUrl = midia.url_externa || midia.caminho;
                mediaElement.src = siteUrl;
                mediaElement.allow = 'autoplay; encrypted-media; fullscreen';
                mediaElement.frameBorder = '0';
                mediaElement.title = midia.nome;
                
                // Event listeners para o iframe
                mediaElement.addEventListener('load', () => {
                    console.log('✅ Site carregado com sucesso:', midia.nome);
                    // Remove indicador de carregamento
                    const loading = mediaContainer.querySelector('.site-loading');
                    if (loading) loading.remove();
                });
                
                mediaElement.addEventListener('error', (e) => {
                    console.error('❌ Erro ao carregar site:', midia.nome, e);
                    // Remove indicador de carregamento e mostra próxima mídia
                    const loading = mediaContainer.querySelector('.site-loading');
                    if (loading) loading.remove();
                    setTimeout(nextMedia, 2000);
                });
                
                // Timer para próxima mídia
                currentTimer = setTimeout(() => {
                    console.log('⏰ Timer do site ativado, próxima mídia');
                    nextMedia();
                }, duration);
                
                // Remove indicador de carregamento após 5 segundos (fallback)
                setTimeout(() => {
                    const loading = mediaContainer.querySelector('.site-loading');
                    if (loading) loading.remove();
                }, 5000);
                
            } else {
                console.error('❌ Tipo de mídia não suportado:', midia.tipo);
                setTimeout(() => nextMedia(), 2000);
                return;
            }
            
            if (mediaElement) {
                mediaContainer.appendChild(mediaElement);
            }
        }
        
        function nextMedia() {
            showMedia(currentIndex + 1);
        }
        
        function prevMedia() {
            showMedia(currentIndex - 1);
        }
        
        function extractYouTubeId(url) {
            const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;
            const match = url.match(regExp);
            return (match && match[2].length === 11) ? match[2] : null;
        }
        
        // Controles de teclado
        document.addEventListener('keydown', (e) => {
            switch(e.key) {
                case 'ArrowRight':
                case ' ':
                    e.preventDefault();
                    nextMedia();
                    break;
                case 'ArrowLeft':
                    e.preventDefault();
                    prevMedia();
                    break;
                case 'f':
                case 'F':
                    e.preventDefault();
                    activateFullscreenAndSound();
                    break;
                case 'Escape':
                    if (document.fullscreenElement) {
                        document.exitFullscreen();
                    }
                    break;
            }
        });
        
        // Inicia reprodução
        if (midias.length > 0) {
            console.log('🎬 Iniciando playlist...');
            showMedia(0);
        }
        
        // Sistema de Heartbeat - Marca tela como online
        function sendHeartbeat() {
            fetch('heartbeat.php?tela=<?= $tela['hash_unico'] ?>')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('📡 Heartbeat enviado:', data.timestamp);
                    }
                })
                .catch(error => {
                    console.error('❌ Erro no heartbeat:', error);
                });
        }
        
        // Envia heartbeat a cada 30 segundos
        sendHeartbeat(); // Primeiro heartbeat imediato
        setInterval(sendHeartbeat, 30000); // A cada 30 segundos
        
    </script>
</body>
</html>